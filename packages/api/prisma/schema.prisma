//******** AUTO GENERATED FILE, DO NOT EDIT.  *********

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

generator nestgraphql {
    provider = "prisma-nestjs-graphql"
    output   = "../src/@generated/prisma-nestjs-graphql"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}


model Contributor {
    /// @Field(() => ID)
    contributor_id      Int      @id @default(autoincrement())
    /// @Validator.IsNotEmpty()
    contributor_code    String
    /// @Validator.IsNotEmpty()
    contributor_name    String
    point               Int @default(100)
    project_id          Int @default(0)
    /// @HideField({ input: true, output: true })
    created_at          DateTime @default(now())
    /// @HideField({ input: true, output: true })
    updated_at          DateTime @updatedAt
}


model Project_detail {
    /// @Field(() => ID)
    index               Int   @id @default(autoincrement())
    /// @Validator.IsNotEmpty()
    project_id          Int
    /// @Validator.IsNotEmpty()
    service_id          Int
    /// @Validator.IsNotEmpty()
    project_code        Int
    /// @Validator.IsNotEmpty()
    ticket_count_total  Int   @default(0)
    ticket_count_closed Int   @default(0)
    sum_project_amount  Float @default(0)
    credit_amount       Int   @default(0)
    carry_over_balance  Int   @default(0)
    price_coefficient   Int   @default(1)

    campaign_deadline    DateTime?
    fundraising_deadline DateTime?

    /// @HideField({ input: true, output: true })
    created_at DateTime @default(now())
    /// @HideField({ input: true, output: true })
    updated_at DateTime @updatedAt
}


model Project_ledger {
    /// @Field(() => ID)
    index        Int      @id @default(autoincrement())
    /// @Validator.IsNotEmpty()
    created_date DateTime @default(now())
    /// @Validator.IsNotEmpty()
    project_id   Int
    target       Int
    unit         String
    income       Float
    expense      Float
    // review_phase String   @default("PHASE1")

    /// @HideField({ input: true, output: true })
    created_at DateTime @default(now())
    /// @HideField({ input: true, output: true })
    updated_at DateTime @updatedAt
}


model Project_summary_by_sprint {
    /// @Field(() => ID)
    index                     Int    @id @default(autoincrement())
    /// @Validator.IsNotEmpty()
    project_id                Int
    /// @Validator.IsNotEmpty()
    sprint_id                Int
    /// @Validator.IsNotEmpty()
    project_amount        Float  @default(0)

    /// @HideField({ input: true, output: true })
    created_at DateTime @default(now())
    /// @HideField({ input: true, output: true })
    updated_at DateTime @updatedAt
}


model Project {
    /// @Field(() => ID)
    project_id                Int    @id @default(autoincrement())
    /// @Validator.IsNotEmpty()
    service_id                Int
    /// @Validator.IsNotEmpty()
    project_code              Int
    /// @Validator.IsNotEmpty()
    name                      String
    status                    Int    @default(0)
    description               String @db.VarChar(320)
    cover_picture             Bytes  @default("")
    avatar_uri                String @default("")
    contributor_count         Int    @default(5)
    minimum_contributor_count Int    @default(3)

    campaign_deadline DateTime?
    start_date        DateTime?
    end_date          DateTime?
    complete_date     DateTime?

    review_phase    String @default("PHASE1")
    voted_amount    Float? @default(0)
    invested_amount Int    @default(0)


    /// @HideField({ input: true, output: true })
    created_at DateTime @default(now())
    /// @HideField({ input: true, output: true })
    updated_at DateTime @updatedAt
}


model Sprint {
    /// @Field(() => ID)
    sprint_id           Int      @id @default(autoincrement())
    /// @Validator.IsNotEmpty()
    sprint_code         Int
    /// @Validator.IsNotEmpty()
    sprint_name         String?
    start_date          DateTime?
    end_date            DateTime?
    service_id          Int
    /// @HideField({ input: true, output: true })
    created_at          DateTime @default(now())
    /// @HideField({ input: true, output: true })
    updated_at          DateTime @updatedAt
}


model Ticket {
    /// @Field(() => ID)
    ticket_id                  Int      @id @default(autoincrement())
    /// @Validator.IsNotEmpty()
    ticket_code          Int
    /// @Validator.IsNotEmpty()
    project_id          Int
    /// @Validator.IsNotEmpty()
    name                String?
    type                Int    @default(0)
    contributor_id      Int?
    sprint_id           Int?
    status              Int?
    start_date          DateTime?
    end_date            DateTime?
    complete_date       DateTime?

    /// @HideField({ input: true, output: true })
    created_at          DateTime @default(now())
    /// @HideField({ input: true, output: true })
    updated_at          DateTime @updatedAt
}


model Voter {
    /// @Field(() => ID)
    id                     Int     @id @default(autoincrement())
    /// @Validator.IsNotEmpty()
    project_id             Int?
    /// @Validator.IsNotEmpty()
    name                   String?
    /// @Validator.IsNotEmpty()
    evm_address            String?
    /// @Validator.IsNotEmpty()
    secret                 String?
    max_voteable           Float?  @default(0)
    pending_airdrop        Float?  @default(0)
    pending_reconcile      Float?  @default(0)
    mock_follow_project_id Int?    @default(1)
    reward                 Float?  @default(0)
}
